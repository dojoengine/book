import{u as i,j as e}from"./index-KZ_aprDi.js";const c=void 0;function d(n){const t={a:"a",code:"code",div:"div",h2:"h2",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...i(),...n.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.h2,{id:"dev-namespace",children:[e.jsx(t.code,{children:"dev"})," Namespace",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#dev-namespace",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"dev"})," API provides a way to manipulate the blockchain state at runtime. This namespace is only accessible when the ",e.jsx(t.code,{children:"--dev"})," flag is enabled."]}),`
`,e.jsxs(t.h3,{id:"generateblock",children:[e.jsx(t.code,{children:"generateBlock"}),e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#generateblock",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(t.p,{children:"Mines a new block which includes all currently pending transactions."}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsx(t.tr,{children:e.jsx(t.th,{children:"Method invocation"})})}),e.jsx(t.tbody,{children:e.jsx(t.tr,{children:e.jsx(t.td,{children:e.jsx(t.code,{children:'{ "method": "dev_generateBlock", "params": [] }'})})})})]}),`
`,e.jsxs(t.h3,{id:"nextblocktimestamp",children:[e.jsx(t.code,{children:"nextBlockTimestamp"}),e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#nextblocktimestamp",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(t.p,{children:"Get the timestamp for the next block."}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsx(t.tr,{children:e.jsx(t.th,{children:"Method invocation"})})}),e.jsx(t.tbody,{children:e.jsx(t.tr,{children:e.jsx(t.td,{children:e.jsx(t.code,{children:'{ "method": "dev_nextBlockTimestamp", "params": [] }'})})})})]}),`
`,e.jsxs(t.h3,{id:"increasenextblocktimestamp",children:[e.jsx(t.code,{children:"increaseNextBlockTimestamp"}),e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#increasenextblocktimestamp",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(t.p,{children:"Increase the time for the block by a given amount of time, in seconds."}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsx(t.tr,{children:e.jsx(t.th,{children:"Method invocation"})})}),e.jsx(t.tbody,{children:e.jsx(t.tr,{children:e.jsx(t.td,{children:e.jsx(t.code,{children:'{ "method": "dev_increaseNextBlockTimestamp", "params": [ amount ] }'})})})})]}),`
`,e.jsxs(t.h3,{id:"setnextblocktimestamp",children:[e.jsx(t.code,{children:"setNextBlockTimestamp"}),e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#setnextblocktimestamp",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(t.p,{children:["Similar to ",e.jsx(t.code,{children:"dev_increaseNextBlockTimestamp"})," but takes the exact timestamp that you want in the next block."]}),`
`,e.jsxs(t.table,{children:[e.jsx(t.thead,{children:e.jsx(t.tr,{children:e.jsx(t.th,{children:"Method invocation"})})}),e.jsx(t.tbody,{children:e.jsx(t.tr,{children:e.jsx(t.td,{children:e.jsx(t.code,{children:'{ "method": "dev_setNextBlockTimestamp", "params": [ timestamp ] }'})})})})]})]})}function a(n={}){const{wrapper:t}={...i(),...n.components};return t?e.jsx(t,{...n,children:e.jsx(d,{...n})}):d(n)}export{a as default,c as frontmatter};
