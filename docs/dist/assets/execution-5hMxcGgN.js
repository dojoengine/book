import{u as a,j as e}from"./index-KZ_aprDi.js";const s={title:"Execution Engines",description:"undefined"};function i(t){const n={a:"a",aside:"aside",br:"br",code:"code",div:"div",figure:"figure",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",span:"span",strong:"strong",...a(),...t.components};return e.jsxs(e.Fragment,{children:[e.jsx(n.header,{children:e.jsxs(n.h1,{id:"execution-engines",children:["Execution Engines",e.jsx(n.a,{"aria-hidden":"true",tabIndex:"-1",href:"#execution-engines",children:e.jsx(n.div,{"data-autolink-icon":!0})})]})}),`
`,e.jsxs(n.p,{children:["Execution engine is the transaction-executing component in the Katana sequencer. It is responsible for processing transactions and updating the state of the Starknet contracts. Currently, Katana supports two execution engines: ",e.jsx(n.code,{children:"blockifier"})," and ",e.jsx(n.code,{children:"starknet_in_rust"}),"."]}),`
`,e.jsxs(n.p,{children:["By default, the ",e.jsx(n.code,{children:"blockfier"})," execution engine is used. It is the official implementation of the Starknet execution logic developed by StarkWare. Blockifier is also what Katana is shipped with when it is installed using ",e.jsx(n.code,{children:"dojoup"}),". For now, the only way to use the ",e.jsx(n.code,{children:"starknet_in_rust"})," engine is to build the Katana binary directly from source."]}),`
`,e.jsxs(n.h2,{id:"using-starknet_in_rust-engine",children:["Using ",e.jsx(n.code,{children:"starknet_in_rust"})," Engine",e.jsx(n.a,{"aria-hidden":"true",tabIndex:"-1",href:"#using-starknet_in_rust-engine",children:e.jsx(n.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(n.p,{children:[e.jsx(n.code,{children:"starknet_in_rust"})," is a Starknet execution logic developed and maintained by the awesome team at LambdaClass. It is meant to be an alternative to ",e.jsx(n.code,{children:"blockifier"}),`.
As mentioned earlier, the `,e.jsx(n.code,{children:"starknet_in_rust"})," engine is not the default execution engine in Katana. For now, the only way to use it is to build the Katana binary directly from source with the ",e.jsx(n.code,{children:"sir"})," feature enabled."]}),`
`,e.jsxs(n.p,{children:["If you want to install Katana with the ",e.jsx(n.code,{children:"starknet_in_rust"})," engine, you can do so by running the following command, without having to clone the Dojo repository locally (provided that you have ",e.jsx(n.code,{children:"rustc"})," and ",e.jsx(n.code,{children:"cargo"})," already installed):"]}),`
`,e.jsx(n.figure,{"data-rehype-pretty-code-figure":"",children:e.jsx(n.pre,{tabIndex:"0","data-language":"console","data-theme":"github-dark-dimmed github-light",children:e.jsx(n.code,{"data-language":"console","data-theme":"github-dark-dimmed github-light",style:{display:"grid"},children:e.jsx(n.span,{"data-line":"",children:e.jsx(n.span,{style:{"--shiki-dark":"#6CB6FF","--shiki-light":"#005CC5"},children:"cargo install --git https://github.com/dojoengine/dojo katana --no-default-features --features sir --locked --force "})})})})}),`
`,e.jsx(n.aside,{"data-callout":"note",children:e.jsxs(n.p,{children:["ðŸ’¡ ",e.jsx(n.strong,{children:"NOTE"}),e.jsx(n.br,{}),`
`,"Although ",e.jsx(n.code,{children:"starknet_in_rust"})," and ",e.jsx(n.code,{children:"blockifier"})," are different implementations of the Starknet logic, under the hood they both are running on the same ",e.jsx(n.code,{children:"cairo-vm"})," implementation. As such, there is not much performance to be gained by switching to the ",e.jsx(n.code,{children:"starknet_in_rust"})," as is. For that, you would need to use the ",e.jsx(n.code,{children:"cairo-native"})," execution engine."]})}),`
`,e.jsxs(n.h2,{id:"cairo-native",children:["Cairo Native",e.jsx(n.a,{"aria-hidden":"true",tabIndex:"-1",href:"#cairo-native",children:e.jsx(n.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(n.p,{children:"TODO: Add more information about Cairo Native and how to build it"}),`
`,e.jsxs(n.h2,{id:"benchmarks",children:["Benchmarks",e.jsx(n.a,{"aria-hidden":"true",tabIndex:"-1",href:"#benchmarks",children:e.jsx(n.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(n.p,{children:"TODO: Add benchmarks for the different execution engines"})]})}function o(t={}){const{wrapper:n}={...a(),...t.components};return n?e.jsx(n,{...t,children:e.jsx(i,{...t})}):i(t)}export{o as default,s as frontmatter};
